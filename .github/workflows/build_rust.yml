name: Build Rust 1.86.0 on OpenBSD Snapshot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-rust-openbsd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start OpenBSD VM
        id: vm
        uses: vmactions/openbsd-vm@v1
        with:
          release: "7.6"
          sync: nfs
          mem: 4096  # Increase memory to handle compilation
          cpu: 4     # Use 4 CPU cores for faster builds
          prepare: |
            pkg_add -u
            pkg_add git gmake python3 curl cmake ninja clang llvm libffi pkgconf gmp mpfr mpc cvs
            # Clean up to save disk space
            rm -rf /tmp/* /var/tmp/*
            df -h  # Log disk usage for debugging

      - name: Upgrade to OpenBSD Snapshot
        shell: openbsd {0}
        run: |
          echo "Upgrading to OpenBSD -current snapshot"
          ftp -o /tmp/bsd.rd https://cdn.openbsd.org/pub/OpenBSD/snapshots/amd64/bsd.rd
          mv /bsd /bsd.bak
          mv /tmp/bsd.rd /bsd
          sysmerge -s /tmp/sysmerge.tgz
          pkg_add -u
          echo "Snapshot upgrade prepared, rebooting would be needed in a real system"
          df -h  # Check disk usage after upgrade

      - name: Fetch lang/rust patches via CVS
        shell: openbsd {0}
        run: |
          echo "Fetching lang/rust patches via CVS"
          mkdir -p /usr/ports/lang/rust
          cvs -d anoncvs@anoncvs.spacehopper.org:/cvs checkout -P ports/lang/rust
          ls -l /usr/ports/lang/rust/patches
          cp -r /usr/ports/lang/rust/patches $GITHUB_WORKSPACE/rust-patches
          rm -rf /usr/ports  # Clean up to save space
          df -h  # Log disk usage

      - name: Clone Rust 1.86.0
        shell: openbsd {0}
        run: |
          echo "Cloning Rust 1.86.0"
          git clone --depth 1 --branch 1.86.0 https://github.com/rust-lang/rust.git /usr/local/rust
          cd /usr/local/rust
          git submodule update --init --depth 1 library/std || (echo "Submodule update failed" && exit 1)
          echo "Rust 1.86.0 source cloned"
          df -h  # Log disk usage

      - name: Apply OpenBSD patches
        shell: openbsd {0}
        run: |
          echo "Applying OpenBSD patches if available"
          cd /usr/local/rust
          if [ -d $GITHUB_WORKSPACE/rust-patches ]; then
            for patch in $GITHUB_WORKSPACE/rust-patches/*; do
              if [ -f "$patch" ]; then
                patch -p1 < "$patch" || echo "Patch $patch failed, continuing"
              fi
            done
          fi
          echo "Patches applied"

      - name: Configure Rust build
        shell: openbsd {0}
        run: |
          echo "Configuring Rust build"
          cd /usr/local/rust
          ./configure \
            --prefix=/usr/local \
            --enable-local-rust \
            --enable-extended \
            --tools=cargo,clippy,rustfmt \
            --llvm-root=/usr/local || (echo "Configure failed" && exit 1)
          echo "Configuration completed"

      - name: Build Rust
        shell: openbsd {0}
        run: |
          echo "Building Rust 1.86.0"
          cd /usr/local/rust
          gmake -j4 > build_log.txt 2>&1 || (cat build_log.txt && exit 1)
          echo "Rust build completed"
          df -h  # Log disk usage

      - name: Install Rust
        shell: openbsd {0}
        run: |
          echo "Installing Rust 1.86.0"
          cd /usr/local/rust
          gmake install || (echo "Installation failed" && exit 1)
          rustc --version
          cargo --version

      - name: Package Rust
        shell: openbsd {0}
        run: |
          echo "Packaging Rust 1.86.0"
          mkdir -p $GITHUB_WORKSPACE/artifacts/rust-1.86.0
          tar -czvf $GITHUB_WORKSPACE/artifacts/rust-1.86.0/rust-1.86.0-openbsd.tar.gz -C /usr/local bin/rustc bin/cargo lib/rustlib
          cp build_log.txt $GITHUB_WORKSPACE/artifacts/rust-1.86.0/
          echo "Rust packaged"
          df -h  # Log disk usage

      - name: Upload Rust artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-1.86.0-openbsd
          path: ${{ github.workspace }}/artifacts/rust-1.86.0/*.tar.gz
