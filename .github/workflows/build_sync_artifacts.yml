name: Build shadowsocks-rust on OpenBSD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build shadowsocks-rust on OpenBSD
    steps:
      - name: Start OpenBSD VM
        id: openbsd-vm
        uses: vmactions/openbsd-vm@v1
        with:
          release: "7.6"
          arch: "amd64"
          usesh: true
          sync: rsync
          prepare: |
            pkg_add -u
            pkg_add python3 gmake git curl cmake bash ggrep gdb libffi ccache ninja rust
          envs: 'HOME PATH'

      - name: Verify Rust Installation
        shell: openbsd {0}
        run: |
          rustc --version
          cargo --version
        env:
          SUDO: doas

      - name: Clone shadowsocks-rust
        shell: openbsd {0}
        run: |
          git clone https://github.com/shadowsocks/shadowsocks-rust.git
          cd shadowsocks-rust
          git checkout v1.21.0

      - name: Build shadowsocks-rust
        shell: openbsd {0}
        run: |
          cd shadowsocks-rust
          cargo build --release

      - name: Debug build output
        shell: openbsd {0}
        run: |
          echo "Current directory: $PWD"
          echo "Home directory: $HOME"
          find $HOME -name target -type d 2>/dev/null || echo "No target directory found"
          ls -l $HOME/shadowsocks-rust/target/release 2>/dev/null || echo "Release directory not found"
          ls -l $HOME/shadowsocks-rust/target/release/ss* 2>/dev/null || echo "No ss* binaries found"
        env:
          SUDO: doas

      - name: Copy binaries from OpenBSD VM to host
        run: |
          mkdir -p ./artifacts
          rsync -avz --progress ${{ steps.openbsd-vm.outputs.rsync-ssh-opts }} \
            /root/shadowsocks-rust/target/release/sslocal \
            /root/shadowsocks-rust/target/release/ssserver \
            /root/shadowsocks-rust/target/release/ssmanager \
            /root/shadowsocks-rust/target/release/ssurl \
            /root/shadowsocks-rust/target/release/ssservice \
            ./artifacts/
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shadowsocks-rust-binaries
          path: |
            artifacts/sslocal
            artifacts/ssserver
            artifacts/ssmanager
            artifacts/ssurl
            artifacts/ssservice
